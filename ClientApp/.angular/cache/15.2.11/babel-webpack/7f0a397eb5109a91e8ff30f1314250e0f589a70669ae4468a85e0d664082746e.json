{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatExpansionModule } from '@angular/material/expansion';\nconst GENERAL_DATA = [{\n  id: 1,\n  category: 'SPM',\n  requirement: 'Malay',\n  grade: 'C'\n}, {\n  id: 2,\n  category: 'SPM',\n  requirement: 'English',\n  grade: 'C'\n}, {\n  id: 3,\n  category: 'STPM',\n  requirement: 'Pengajian Am',\n  grade: 'C'\n}, {\n  id: 4,\n  category: 'Matriculation',\n  requirement: 'PNGK',\n  grade: '2.00'\n}, {\n  id: 5,\n  category: 'Diploma',\n  requirement: 'PNGK',\n  grade: '2.00'\n}, {\n  id: 6,\n  category: 'MUET',\n  requirement: 'Band',\n  grade: '1.00'\n}];\nlet ProgramManageComponent = class ProgramManageComponent {\n  constructor(http, cdr) {\n    this.http = http;\n    this.cdr = cdr;\n    this.displayedColumns = ['category', 'requirement', 'grade'];\n    this.generalRequirement = GENERAL_DATA;\n    this.selectedFaculty = null;\n    this.faculties = [{\n      value: 'fc',\n      viewValue: 'Faculty of Computing'\n    }, {\n      value: 'fkm',\n      viewValue: 'Faculty of Mechanical Engineering'\n    }, {\n      value: 'fke',\n      viewValue: 'Faculty of Engineering'\n    }];\n    this.programs = {\n      fc: [{\n        code: 'UT6481001',\n        name: 'Software Engineering'\n      }, {\n        code: 'UT6481002',\n        name: 'Data Engineering'\n      }, {\n        code: 'UT6481003',\n        name: 'Bioinformatics'\n      }, {\n        code: 'UT6481004',\n        name: 'Network and Cybersecurity'\n      }, {\n        code: 'UT6481005',\n        name: 'Graphics and Multimedia'\n      }],\n      fkm: [{\n        code: 'UT6521001',\n        name: 'Pure Mechanics'\n      }, {\n        code: 'UT6521003',\n        name: 'Manufacturing'\n      }, {\n        code: 'UT6521004',\n        name: 'Industrial'\n      }, {\n        code: 'UT6525001',\n        name: 'Aerospace'\n      }, {\n        code: 'UT6525002',\n        name: 'Automotive'\n      }, {\n        code: 'UT6525003',\n        name: 'Offshore'\n      }],\n      fke: [{\n        code: 'UT6522002',\n        name: 'Electrical Engineering'\n      }, {\n        code: 'UT6523001',\n        name: 'Electronic Engineering'\n      }, {\n        code: 'UT6523002',\n        name: 'Mechatronics Engineering'\n      }, {\n        code: 'UT6523003',\n        name: 'Biomedical Engineering'\n      }]\n    };\n    this.specialRequirements = {\n      // Faculty of Computing\n      UT6481001: [{\n        category: 'SPM',\n        requirement: 'Mathematics',\n        grade: 'B'\n      }, {\n        category: 'STPM',\n        requirement: 'Physics',\n        grade: 'B'\n      }],\n      UT6481002: [{\n        category: 'SPM',\n        requirement: 'Additional Mathematics',\n        grade: 'A'\n      }, {\n        category: 'STPM',\n        requirement: 'Chemistry',\n        grade: 'C'\n      }],\n      UT6481003: [{\n        category: 'SPM',\n        requirement: 'Biology',\n        grade: 'B'\n      }, {\n        category: 'STPM',\n        requirement: 'Mathematics',\n        grade: 'C'\n      }],\n      UT6481004: [{\n        category: 'SPM',\n        requirement: 'Computer Science',\n        grade: 'A'\n      }, {\n        category: 'STPM',\n        requirement: 'Information Technology',\n        grade: 'B'\n      }],\n      UT6481005: [{\n        category: 'SPM',\n        requirement: 'Creative Arts',\n        grade: 'B'\n      }, {\n        category: 'STPM',\n        requirement: 'Multimedia Design',\n        grade: 'C'\n      }],\n      // Faculty of Mechanical Engineering\n      UT6521001: [{\n        category: 'SPM',\n        requirement: 'Physics',\n        grade: 'A'\n      }, {\n        category: 'STPM',\n        requirement: 'Pure Mechanics',\n        grade: 'B'\n      }],\n      UT6521003: [{\n        category: 'SPM',\n        requirement: 'Technical Drawing',\n        grade: 'B'\n      }, {\n        category: 'STPM',\n        requirement: 'Engineering Graphics',\n        grade: 'C'\n      }],\n      UT6521004: [{\n        category: 'SPM',\n        requirement: 'Physics',\n        grade: 'B'\n      }, {\n        category: 'STPM',\n        requirement: 'Industrial Mathematics',\n        grade: 'C'\n      }],\n      UT6525001: [{\n        category: 'SPM',\n        requirement: 'Aerodynamics',\n        grade: 'A'\n      }, {\n        category: 'STPM',\n        requirement: 'Aerospace Engineering Basics',\n        grade: 'B'\n      }],\n      UT6525002: [{\n        category: 'SPM',\n        requirement: 'Automotive Mechanics',\n        grade: 'B'\n      }, {\n        category: 'STPM',\n        requirement: 'Vehicle Engineering',\n        grade: 'C'\n      }],\n      UT6525003: [{\n        category: 'SPM',\n        requirement: 'Marine Science',\n        grade: 'B'\n      }, {\n        category: 'STPM',\n        requirement: 'Offshore Engineering',\n        grade: 'C'\n      }],\n      // Faculty of Engineering\n      UT6522002: [{\n        category: 'SPM',\n        requirement: 'Electrical Science',\n        grade: 'A'\n      }, {\n        category: 'STPM',\n        requirement: 'Electronics',\n        grade: 'B'\n      }],\n      UT6523001: [{\n        category: 'SPM',\n        requirement: 'Circuit Theory',\n        grade: 'A'\n      }, {\n        category: 'STPM',\n        requirement: 'Digital Systems',\n        grade: 'B'\n      }],\n      UT6523002: [{\n        category: 'SPM',\n        requirement: 'Robotics',\n        grade: 'B'\n      }, {\n        category: 'STPM',\n        requirement: 'Mechatronics Basics',\n        grade: 'C'\n      }],\n      UT6523003: [{\n        category: 'SPM',\n        requirement: 'Biology',\n        grade: 'A'\n      }, {\n        category: 'STPM',\n        requirement: 'Biomedical Engineering',\n        grade: 'B'\n      }]\n    };\n  }\n  getGeneralRequirement() {\n    let self = this;\n    this.http.get('https://localhost:7108/api/general').subscribe(res => {\n      this.generalRequirement = res;\n      this.cdr.markForCheck();\n    });\n  }\n  clearFilter() {\n    this.selectedFaculty = null;\n  }\n  getProgramsForFaculty() {\n    return this.selectedFaculty ? this.programs[this.selectedFaculty] : [];\n  }\n  getSpecialRequirements(programCode) {\n    return this.specialRequirements[programCode] || [];\n  }\n};\nProgramManageComponent = __decorate([Component({\n  selector: 'app-program-manage',\n  standalone: true,\n  imports: [CommonModule, MatTableModule, MatFormFieldModule, MatSelectModule, MatInputModule, FormsModule, MatIconModule, MatExpansionModule],\n  templateUrl: './program-manage.component.html',\n  styleUrls: ['./program-manage.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], ProgramManageComponent);\nexport { ProgramManageComponent };","map":{"version":3,"mappings":"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","names":["CommonModule","ChangeDetectionStrategy","Component","FormsModule","MatFormFieldModule","MatIconModule","MatInputModule","MatSelectModule","MatTableModule","MatExpansionModule","GENERAL_DATA","id","category","requirement","grade","ProgramManageComponent","constructor","http","cdr","value","viewValue","fc","code","name","fkm","fke","UT6481001","UT6481002","UT6481003","UT6481004","UT6481005","UT6521001","UT6521003","UT6521004","UT6525001","UT6525002","UT6525003","UT6522002","UT6523001","UT6523002","UT6523003","getGeneralRequirement","self","get","subscribe","res","generalRequirement","markForCheck","clearFilter","selectedFaculty","getProgramsForFaculty","programs","getSpecialRequirements","programCode","specialRequirements","selector","standalone","imports","templateUrl","styleUrls","changeDetection","OnPush"],"sourceRoot":"","sources":["C:\\Users\\jessm\\OneDrive\\Desktop\\work\\FYP\\sam\\ClientApp\\src\\app\\program-manage\\program-manage.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface GeneralEntryRequirement {\n  category: string;\n  id: number;\n  requirement: string;\n  grade: string;\n}\nexport interface Faculty {\n  value: string;\n  viewValue: string;\n}\n\nexport interface Program {\n  code: string;\n  name: string;\n}\n\nconst GENERAL_DATA: GeneralEntryRequirement[] = [\n  {id: 1, category: 'SPM', requirement: 'Malay', grade: 'C'},\n  {id: 2, category: 'SPM', requirement: 'English', grade: 'C'},\n  {id: 3, category: 'STPM', requirement: 'Pengajian Am', grade: 'C'},\n  {id: 4, category: 'Matriculation', requirement: 'PNGK', grade: '2.00'},\n  {id: 5, category: 'Diploma', requirement: 'PNGK', grade: '2.00'},\n  {id: 6, category: 'MUET', requirement: 'Band', grade: '1.00'},\n];\n\nexport interface SpecialEntryRequirement {\n  category: string;\n  requirement: string;\n  grade: string;\n}\n\n\n@Component({\n  selector: 'app-program-manage',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    FormsModule,\n    MatIconModule,\n    MatExpansionModule\n  ],\n  templateUrl: './program-manage.component.html',\n  styleUrls: ['./program-manage.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgramManageComponent {\n\n  constructor(private http: HttpClient     ,   private cdr: ChangeDetectorRef,\n  ) { }\n  displayedColumns: string[] = ['category','requirement', 'grade'];\n  generalRequirement = GENERAL_DATA;\n  selectedFaculty: string | null = null;\n\n  faculties: Faculty[] = [\n    {value: 'fc', viewValue: 'Faculty of Computing'},\n    {value: 'fkm', viewValue: 'Faculty of Mechanical Engineering'},\n    {value: 'fke', viewValue: 'Faculty of Engineering'},\n  ];\n\n  getGeneralRequirement(){\n    let self = this;\n    this.http.get('https://localhost:7108/api/general')\n        .subscribe((res: any) => {\n            this.generalRequirement = res;\n            this.cdr.markForCheck();\n        });\n  }\n\n  clearFilter(): void {\n    this.selectedFaculty = null;\n  }\n\n  getProgramsForFaculty(): Program[] {\n    return this.selectedFaculty ? this.programs[this.selectedFaculty] : [];\n  }\n\n  getSpecialRequirements(programCode: string): SpecialEntryRequirement[] {\n    return this.specialRequirements[programCode] || [];\n  }\n\n  programs: { [key: string]: Program[] } = {\n    fc: [\n      { code: 'UT6481001', name: 'Software Engineering' },\n      { code: 'UT6481002', name: 'Data Engineering' },\n      { code: 'UT6481003', name: 'Bioinformatics' },\n      { code: 'UT6481004', name: 'Network and Cybersecurity' },\n      { code: 'UT6481005', name: 'Graphics and Multimedia' },\n    ],\n    fkm: [\n      { code: 'UT6521001', name: 'Pure Mechanics' },\n      { code: 'UT6521003', name: 'Manufacturing' },\n      { code: 'UT6521004', name: 'Industrial' },\n      { code: 'UT6525001', name: 'Aerospace' },\n      { code: 'UT6525002', name: 'Automotive' },\n      { code: 'UT6525003', name: 'Offshore' },\n    ],\n    fke: [\n      { code: 'UT6522002', name: 'Electrical Engineering' },\n      { code: 'UT6523001', name: 'Electronic Engineering' },\n      { code: 'UT6523002', name: 'Mechatronics Engineering' },\n      { code: 'UT6523003', name: 'Biomedical Engineering' },\n    ],\n  };\n\n  specialRequirements: { [programCode: string]: SpecialEntryRequirement[] } = {\n    // Faculty of Computing\n    UT6481001: [\n      { category: 'SPM', requirement: 'Mathematics', grade: 'B' },\n      { category: 'STPM', requirement: 'Physics', grade: 'B' },\n    ],\n    UT6481002: [\n      { category: 'SPM', requirement: 'Additional Mathematics', grade: 'A' },\n      { category: 'STPM', requirement: 'Chemistry', grade: 'C' },\n    ],\n    UT6481003: [\n      { category: 'SPM', requirement: 'Biology', grade: 'B' },\n      { category: 'STPM', requirement: 'Mathematics', grade: 'C' },\n    ],\n    UT6481004: [\n      { category: 'SPM', requirement: 'Computer Science', grade: 'A' },\n      { category: 'STPM', requirement: 'Information Technology', grade: 'B' },\n    ],\n    UT6481005: [\n      { category: 'SPM', requirement: 'Creative Arts', grade: 'B' },\n      { category: 'STPM', requirement: 'Multimedia Design', grade: 'C' },\n    ],\n\n    // Faculty of Mechanical Engineering\n    UT6521001: [\n      { category: 'SPM', requirement: 'Physics', grade: 'A' },\n      { category: 'STPM', requirement: 'Pure Mechanics', grade: 'B' },\n    ],\n    UT6521003: [\n      { category: 'SPM', requirement: 'Technical Drawing', grade: 'B' },\n      { category: 'STPM', requirement: 'Engineering Graphics', grade: 'C' },\n    ],\n    UT6521004: [\n      { category: 'SPM', requirement: 'Physics', grade: 'B' },\n      { category: 'STPM', requirement: 'Industrial Mathematics', grade: 'C' },\n    ],\n    UT6525001: [\n      { category: 'SPM', requirement: 'Aerodynamics', grade: 'A' },\n      { category: 'STPM', requirement: 'Aerospace Engineering Basics', grade: 'B' },\n    ],\n    UT6525002: [\n      { category: 'SPM', requirement: 'Automotive Mechanics', grade: 'B' },\n      { category: 'STPM', requirement: 'Vehicle Engineering', grade: 'C' },\n    ],\n    UT6525003: [\n      { category: 'SPM', requirement: 'Marine Science', grade: 'B' },\n      { category: 'STPM', requirement: 'Offshore Engineering', grade: 'C' },\n    ],\n\n    // Faculty of Engineering\n    UT6522002: [\n      { category: 'SPM', requirement: 'Electrical Science', grade: 'A' },\n      { category: 'STPM', requirement: 'Electronics', grade: 'B' },\n    ],\n    UT6523001: [\n      { category: 'SPM', requirement: 'Circuit Theory', grade: 'A' },\n      { category: 'STPM', requirement: 'Digital Systems', grade: 'B' },\n    ],\n    UT6523002: [\n      { category: 'SPM', requirement: 'Robotics', grade: 'B' },\n      { category: 'STPM', requirement: 'Mechatronics Basics', grade: 'C' },\n    ],\n    UT6523003: [\n      { category: 'SPM', requirement: 'Biology', grade: 'A' },\n      { category: 'STPM', requirement: 'Biomedical Engineering', grade: 'B' },\n    ],\n  };\n\n\n }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}